---
import "../styles/global.css";
import { Toaster } from "sonner";

const { title, description, frontmatter } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta
      name="description"
      content={description || "Personal website and blog of Shahzeb"}
    />
    <title>{frontmatter?.title || title || "My Blog"}</title>
    <style>
      /* animation for links */
      a {
        transition: color 0.3s ease;
      }

      /* fade-in for main content */
      main {
        animation: fadeIn 0.5s ease-in-out;
      }

      /* Style for H1 titles from Markdown content */
      main :global(h1) {
        font-weight: 500;
        font-size: 2rem;
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
        }
        to {
          opacity: 1;
        }
      }
    </style>
  </head>
  <body class="bg-neutral-50 text-neutral-800 font-sans">
    <Toaster position="bottom-center" richColors client:load />
    <div class="max-w-2xl mx-auto px-6 py-12">
      <main class="space-y-8">
        {
          /* Render title from frontmatter if it exists, otherwise use page title */
        }
        <h1>{frontmatter?.title || title}</h1>

        {/* Render pubDate and minutesRead if they exist in frontmatter */}
        {
          frontmatter?.pubDate && frontmatter?.minutesRead && (
            <div class="text-sm text-neutral-600 mb-4">
              <span>
                {new Date(frontmatter.pubDate).toLocaleDateString("en-US", {
                  year: "numeric",
                  month: "long",
                  day: "numeric",
                })}
              </span>
              <span class="mx-1">Â·</span>
              <span>{frontmatter.minutesRead}</span>
            </div>
          )
        }

        <slot />
        {/* Page content will be injected here */}
      </main>

      {/* Newsletter Section - Only show on home page */}
      {
        Astro.url.pathname === "/" && (
          <section class="mt-16 pt-8 border-t border-neutral-200">
            <h2 class="font-semibold mb-4">Newsletter</h2>
            <p class="mb-4 text-neutral-600">
              Get updates when I publish new write ups.
            </p>
            <form id="newsletter-form" class="flex flex-col sm:flex-row gap-2">
              <input
                type="email"
                name="email"
                id="email"
                required
                placeholder="Your email address"
                class="flex-grow px-3 py-2 border border-neutral-300 rounded focus:outline-none focus:ring-2 focus:ring-sky-300 sm:text-sm"
              />
              <button
                type="submit"
                class="px-4 py-2 bg-sky-600 text-white rounded hover:bg-sky-800 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
              >
                Subscribe
              </button>
            </form>
          </section>
        )
      }

      {/* Conditionally render Back to Home link */}
      {
        Astro.url.pathname !== "/" && (
          <nav class="mt-10 pt-8 border-t border-neutral-200">
            <a
              href="/"
              class="text-neutral-600 hover:text-neutral-900 inline-flex items-center text-sm font-medium transition-colors"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-4 w-4 mr-2"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
                stroke-width="2"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M10 19l-7-7m0 0l7-7m-7 7h18"
                />
              </svg>
              Back to Home
            </a>
          </nav>
        )
      }

      {/* Footer Section */}
      <footer
        class="mt-8 pt-6 border-t border-neutral-200 text-center text-neutral-500 text-xs"
      >
        <p>
          &copy; {new Date().getFullYear()} shah.build. All rights reserved.
        </p>
      </footer>
    </div>

    <script>
      import { toast } from "sonner";

      document.addEventListener("DOMContentLoaded", () => {
        const form = document.getElementById(
          "newsletter-form"
        ) as HTMLFormElement;
        if (!form) return;

        const submitButton = form.querySelector(
          'button[type="submit"]'
        ) as HTMLButtonElement;

        form.addEventListener("submit", async (event) => {
          event.preventDefault();
          if (submitButton) submitButton.disabled = true;

          const submittingToastId = toast.loading("Submitting...");

          const emailInput = form.querySelector("#email") as HTMLInputElement;
          const email = emailInput?.value;

          try {
            if (!email) {
              throw new Error("Email is required.");
            }
            const response = await fetch("/api/subscribe", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ email: email }),
            });

            const result = await response.json();

            if (response.ok) {
              toast.success(result.message || "Success! You're on the list.", {
                id: submittingToastId,
              });
              form.reset();
            } else {
              toast.error(result.message || "An error occurred.", {
                id: submittingToastId,
              });
            }
          } catch (error) {
            console.error("Form submission error:", error);
            toast.error(
              error instanceof Error
                ? error.message
                : "An unexpected error occurred. Please try again.",
              { id: submittingToastId }
            );
          } finally {
            if (submitButton) submitButton.disabled = false;
          }
        });
      });
    </script>
  </body>
</html>
