---
import "../styles/global.css";
import { Toaster } from "sonner";
import { getImagePath } from "astro-opengraph-images";

const { title, description, frontmatter } = Astro.props;
const { url, site } = Astro;
const openGraphImageUrl = getImagePath({ url, site });
const ogUrl = site ? new URL(url?.pathname || "/", site).toString() : (url?.toString?.() || "/");
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta property="og:title" content={frontmatter?.title || title || "My Blog"} />
    <meta property="og:type" content="website" />
    <meta property="og:image" content={openGraphImageUrl} />
    <meta property="og:url" content={ogUrl} />
    <meta property="og:description" content={description || "Shahzeb's personal blog covering everything he finds interesting"} />
    <meta
      name="description"
      content={description || "Shahzeb's personal blog covering everything he finds interesting"}
    />
    <title>{frontmatter?.title || title || "My Blog"}</title>
    <style>
      /* animation for links */
      a {
        transition: all 0.2s ease;
      }

      /* fade-in for main content */
      .content-wrapper {
        animation: fadeIn 0.6s ease-out;
      }

      /* Style for H1 titles from Markdown content */
      main :global(h1) {
        font-weight: 600;
        font-size: 1.875rem;
        line-height: 1.2;
        color: #1f2937;
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(10px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }
    </style>
  </head>
  <body class="bg-white text-gray-900 font-sans antialiased">
    <Toaster position="bottom-center" richColors client:load />

    <div class="min-h-screen">
      <div class="max-w-3xl mx-auto px-6 py-16">
        <div class="content-wrapper">
          {/* Header with conditional title */}
          <header class="mb-12">
            {
              frontmatter?.title ? (
                <div>
                  <h1 class="text-gray-900 text-2xl font-semibold mb-3">
                    {frontmatter.title}
                  </h1>
                  {frontmatter?.pubDate && frontmatter?.minutesRead && (
                    <div class="text-sm text-gray-500 flex items-center gap-2">
                      <time>
                        {new Date(frontmatter.pubDate).toLocaleDateString(
                          "en-US",
                          {
                            year: "numeric",
                            month: "long",
                            day: "numeric",
                          }
                        )}
                      </time>
                      <span>Â·</span>
                      <span>{frontmatter.minutesRead}</span>
                    </div>
                  )}
                </div>
              ) : (
                <h1 class="text-gray-900 text-2xl font-semibold">{title}</h1>
              )
            }
          </header>

          {/* Main content */}
          <main class="prose prose-gray max-w-none">
            <slot />
          </main>

          {/* Newsletter Section - Only on home page */}
          {
            Astro.url.pathname === "/" && (
              <section class="mt-20 pt-8 border-t border-gray-200">
                <div class="space-y-4">
                  <h2 class="text-lg font-medium text-gray-900">
                    Stay updated
                  </h2>
                  <p class="text-gray-600 text-sm leading-relaxed">
                    Get notified when I publish new articles and insights.
                  </p>
                  <form id="newsletter-form" class="space-y-3">
                    <input
                      type="email"
                      name="email"
                      id="email"
                      required
                      placeholder="Enter your email"
                      class="w-full px-4 py-3 text-sm border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                    />
                    <button
                      type="submit"
                      class="w-full px-4 py-3 bg-gray-900 text-white text-sm font-medium rounded-lg hover:bg-gray-800 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
                    >
                      Subscribe
                    </button>
                  </form>
                </div>
              </section>
            )
          }

          {/* Back to home navigation */}
          {
            Astro.url.pathname !== "/" && (
              <nav class="mt-16 pt-8 border-t border-gray-200">
                <a
                  href="/"
                  class="inline-flex items-center text-sm text-gray-600 hover:text-gray-900 transition-colors group"
                >
                  <svg
                    class="w-4 h-4 mr-2 transition-transform group-hover:-translate-x-1"
                    fill="none"
                    viewBox="0 0 24 24"
                    stroke="currentColor"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M15 19l-7-7 7-7"
                    />
                  </svg>
                  Home
                </a>
              </nav>
            )
          }
        </div>

        {/* Footer */}
        <footer class="mt-20 pt-8 border-t border-gray-200">
          {
            Astro.url.pathname === "/" ? (
              <div class="flex items-center justify-between">
                <div class="flex items-center space-x-3">
                  <a href="https://x.com/shahdotbuild" target="_blank" rel="noopener noreferrer">
                    <img 
                      src="/profile-pic.png" 
                      alt="Shah" 
                      class="w-12 h-12 rounded-full object-cover hover:opacity-80 transition-opacity"
                    />
                  </a>
                  <a href="https://x.com/shahdotbuild" target="_blank" rel="noopener noreferrer">
                    <img 
                      src="/signature.png" 
                      alt="Shah's signature" 
                      class="h-10 object-contain hover:opacity-80 transition-opacity"
                    />
                  </a>
                </div>
                <div class="text-xs text-gray-500">
                  <p>shah.build. All rights reserved</p>
                </div>
              </div>
            ) : (
              <div class="text-center text-xs text-gray-500">
                <p>&copy; {new Date().getFullYear()} shah.build</p>
              </div>
            )
          }
        </footer>
      </div>
    </div>

    <script>
      import { toast } from "sonner";

      document.addEventListener("DOMContentLoaded", () => {
        const form = document.getElementById(
          "newsletter-form"
        ) as HTMLFormElement;
        if (!form) return;

        const submitButton = form.querySelector(
          'button[type="submit"]'
        ) as HTMLButtonElement;

        form.addEventListener("submit", async (event) => {
          event.preventDefault();
          if (submitButton) submitButton.disabled = true;

          const submittingToastId = toast.loading("Submitting...");
          const emailInput = form.querySelector("#email") as HTMLInputElement;
          const email = emailInput?.value;

          try {
            if (!email) {
              throw new Error("Email is required.");
            }
            const response = await fetch("/api/subscribe", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ email: email }),
            });

            const result = await response.json();

            if (response.ok) {
              toast.success(result.message || "Success! You're on the list.", {
                id: submittingToastId,
              });
              form.reset();
            } else {
              toast.error(result.message || "An error occurred.", {
                id: submittingToastId,
              });
            }
          } catch (error) {
            console.error("Form submission error:", error);
            toast.error(
              error instanceof Error
                ? error.message
                : "An unexpected error occurred. Please try again.",
              { id: submittingToastId }
            );
          } finally {
            if (submitButton) submitButton.disabled = false;
          }
        });
      });
    </script>
  </body>
</html>
