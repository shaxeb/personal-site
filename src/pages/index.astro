---
import BaseLayout from '../layouts/BaseLayout.astro';

// Define type for Astro Markdown post frontmatter
interface PostFrontmatter {
	title: string;
	pubDate: string; // Or Date can be used to sort posts by date
	description?: string; // description
	[key: string]: any; // Allow other frontmatter properties
}

// Define type for the result of Astro.glob for Markdown
interface MarkdownPost {
	file: URL;
	url?: string;
	frontmatter: PostFrontmatter;
	getHeadings: () => Promise<{ depth: number; slug: string; text: string }[]>;
	compiledContent: () => string;
	rawContent: () => string;
}

// 1. Fetch all posts using Astro.glob with type
const allPosts: MarkdownPost[] = await Astro.glob('./posts/*.md');

// Sort posts by date, newest first
allPosts.sort((a: MarkdownPost, b: MarkdownPost) => new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf());
---
<BaseLayout title="shah.build - Home">
		<h1>shah.build</h1>
		<p>
			I'm a software engineer based in India and currently developing a
			Developer support solution. This is my Scratchpad where I jot down
			what I learn and find amazing
		</p>

		<hr class="my-8 border-neutral-200" />

		<h2>Blog Posts</h2>

		{/* 2. Loop through posts and display data */}
		<div class="space-y-4"> {/* Add spacing between post links */}
			{allPosts.map((post: MarkdownPost) => (
				<a href={post.url} class="block p-4 border border-neutral-200 rounded hover:bg-neutral-100 hover:border-neutral-300 transition-colors">
					<h3 class="text-lg font-semibold mb-1">{post.frontmatter.title}</h3>
					<p class="text-sm text-neutral-600">
						Published: {new Date(post.frontmatter.pubDate).toLocaleDateString('en-US', {
							year: 'numeric',
							month: 'long',
							day: 'numeric'
						})}
					</p>
					{/* Optional: Display description if available */}
					{post.frontmatter.description && (
						<p class="mt-2 text-neutral-700">{post.frontmatter.description}</p>
					)}
				</a>
			))}
		</div>

		<hr class="my-8 border-neutral-200" />

</BaseLayout>
